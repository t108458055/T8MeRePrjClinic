@{
    ViewData["Title"] = "編輯";
}
<link href="https://unpkg.com/vue3-easy-data-table/dist/style.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/vue@3.2.1/dist/vue.global.js"></script>
<script src="https://unpkg.com/vue3-easy-data-table"></script>
@*範例*@
<div id="app">
    <easy-data-table :headers="headers"
                     :items="items" />
</div>
<script>
    const App = {
        components: {
            EasyDataTable: window['vue3-easy-data-table'],
        },
        data() {
            return {
                headers: [
                    { text: "PLAYER", value: "player" },
                    { text: "TEAM", value: "team" },
                    { text: "NUMBER", value: "number" },
                    { text: "POSITION", value: "position" },
                    { text: "HEIGHT", value: "indicator.height" },
                    { text: "WEIGHT (lbs)", value: "indicator.weight", sortable: true },
                    { text: "LAST ATTENDED", value: "lastAttended", width: 200 },
                    { text: "COUNTRY", value: "country" },
                ],
                items: [
                    { player: "Stephen Curry", team: "GSW", number: 30, position: 'G', indicator: { "height": '6-2', "weight": 185 }, lastAttended: "Davidson", country: "USA" },
                    { player: "Lebron James", team: "LAL", number: 6, position: 'F', indicator: { "height": '6-9', "weight": 250 }, lastAttended: "St. Vincent-St. Mary HS (OH)", country: "USA" },
                    { player: "Kevin Durant", team: "BKN", number: 7, position: 'F', indicator: { "height": '6-10', "weight": 240 }, lastAttended: "Texas-Austin", country: "USA" },
                    { player: "Giannis Antetokounmpo", team: "MIL", number: 34, position: 'F', indicator: { "height": '6-11', "weight": 242 }, lastAttended: "Filathlitikos", country: "Greece" },
                ],
            }
        },
    };
    Vue.createApp(App).mount('#app');
</script>
@*DDD*@


@*<div id="app">
    <template>
 
        <v-data-table :headers="headers"
                      :items="desserts"
                      :sort-by="[{ key: 'calories', order: 'asc' }]"
                      class="elevation-1">
            <template v-slot:top>
                <v-toolbar flat>
                    <v-toolbar-title>My CRUD</v-toolbar-title>
                    <v-divider class="mx-4"
                               inset
                               vertical></v-divider>
                    <v-spacer></v-spacer>
                    <v-dialog v-model="dialog"
                              max-width="500px">
                        <template v-slot:activator="{ props }">
                            <v-btn color="primary"
                                   dark
                                   class="mb-2"
                                   v-bind="props">
                                New Item
                            </v-btn>
                        </template>
                        <v-card>
                            <v-card-title>
                                <span class="text-h5">{{ formTitle }}</span>
                            </v-card-title>

                            <v-card-text>
                                <v-container>
                                    <v-row>
                                        <v-col cols="12"
                                               sm="6"
                                               md="4">
                                            <v-text-field v-model="editedItem.name"
                                                          label="Dessert name"></v-text-field>
                                        </v-col>
                                        <v-col cols="12"
                                               sm="6"
                                               md="4">
                                            <v-text-field v-model="editedItem.calories"
                                                          label="Calories"></v-text-field>
                                        </v-col>
                                        <v-col cols="12"
                                               sm="6"
                                               md="4">
                                            <v-text-field v-model="editedItem.fat"
                                                          label="Fat (g)"></v-text-field>
                                        </v-col>
                                        <v-col cols="12"
                                               sm="6"
                                               md="4">
                                            <v-text-field v-model="editedItem.carbs"
                                                          label="Carbs (g)"></v-text-field>
                                        </v-col>
                                        <v-col cols="12"
                                               sm="6"
                                               md="4">
                                            <v-text-field v-model="editedItem.protein"
                                                          label="Protein (g)"></v-text-field>
                                        </v-col>
                                    </v-row>
                                </v-container>
                            </v-card-text>

                            <v-card-actions>
                                <v-spacer></v-spacer>
                                <v-btn color="blue-darken-1"
                                       variant="text"
                                       @@click="close">
                                    Cancel
                                </v-btn>
                                <v-btn color="blue-darken-1"
                                       variant="text"
                                      @@click="save">
                                    Save
                                </v-btn>
                            </v-card-actions>
                        </v-card>
                    </v-dialog>
                    <v-dialog v-model="dialogDelete" max-width="500px">
                        <v-card>
                            <v-card-title class="text-h5">Are you sure you want to delete this item?</v-card-title>
                            <v-card-actions>
                                <v-spacer></v-spacer>
                                <v-btn color="blue-darken-1" variant="text" @@click="closeDelete">Cancel</v-btn>
                                <v-btn color="blue-darken-1" variant="text" @@click="deleteItemConfirm">OK</v-btn>
                                <v-spacer></v-spacer>
                            </v-card-actions>
                        </v-card>
                    </v-dialog>
                </v-toolbar>
            </template>
            <template v-slot:item.actions="{ item }">
                <v-icon size="small"
                        class="me-2"
                        @@click="editItem(item.raw)">
                    mdi-pencil
                </v-icon>
                <v-icon size="small"
                        @@click="deleteItem(item.raw)">
                    mdi-delete
                </v-icon>
            </template>
            <template v-slot:no-data>
                <v-btn color="primary"
                       @@click="initialize">
                    Reset
                </v-btn>
            </template>
        </v-data-table>
    </template>
</div>
*@
@*VUE3 不支援 V-TABLE*@
@section Scripts{
  @*  <script type="text/javascript">
   
      
        const vuetify = Vuetify.createVuetify()
        const adminpage = Vue.createApp({
            //Data Manager
            components: {
                EasyDataTable: window['vue3-easy-data-table'],
            },
            data() {
                return {
                    dialog: false,
                    dialogDelete: false,
                    headers: [
                        {
                            title: 'Dessert (100g serving)',
                            align: 'start',
                            sortable: false,
                            key: 'name',
                        },
                        { title: 'Calories', key: 'calories' },
                        { title: 'Fat (g)', key: 'fat' },
                        { title: 'Carbs (g)', key: 'carbs' },
                        { title: 'Protein (g)', key: 'protein' },
                        { title: 'Actions', key: 'actions', sortable: false },
                    ],
                    desserts: [],
                    editedIndex: -1,
                    editedItem: {
                        name: '',
                        calories: 0,
                        fat: 0,
                        carbs: 0,
                        protein: 0,
                    },
                    defaultItem: {
                        name: '',
                        calories: 0,
                        fat: 0,
                        carbs: 0,
                        protein: 0,
                    },
                   
                }
            },          
            //Method Manager
            methods: {
                initialize() {
                    this.desserts = [
                        {
                            name: 'Frozen Yogurt',
                            calories: 159,
                            fat: 6.0,
                            carbs: 24,
                            protein: 4.0,
                        },
                        {
                            name: 'Ice cream sandwich',
                            calories: 237,
                            fat: 9.0,
                            carbs: 37,
                            protein: 4.3,
                        },
                        {
                            name: 'Eclair',
                            calories: 262,
                            fat: 16.0,
                            carbs: 23,
                            protein: 6.0,
                        },
                        {
                            name: 'Cupcake',
                            calories: 305,
                            fat: 3.7,
                            carbs: 67,
                            protein: 4.3,
                        },
                        {
                            name: 'Gingerbread',
                            calories: 356,
                            fat: 16.0,
                            carbs: 49,
                            protein: 3.9,
                        },
                        {
                            name: 'Jelly bean',
                            calories: 375,
                            fat: 0.0,
                            carbs: 94,
                            protein: 0.0,
                        },
                        {
                            name: 'Lollipop',
                            calories: 392,
                            fat: 0.2,
                            carbs: 98,
                            protein: 0,
                        },
                        {
                            name: 'Honeycomb',
                            calories: 408,
                            fat: 3.2,
                            carbs: 87,
                            protein: 6.5,
                        },
                        {
                            name: 'Donut',
                            calories: 452,
                            fat: 25.0,
                            carbs: 51,
                            protein: 4.9,
                        },
                        {
                            name: 'KitKat',
                            calories: 518,
                            fat: 26.0,
                            carbs: 65,
                            protein: 7,
                        },
                    ]
                },

                editItem(item) {
                    this.editedIndex = this.desserts.indexOf(item)
                    this.editedItem = Object.assign({}, item)
                    this.dialog = true
                },

                deleteItem(item) {
                    this.editedIndex = this.desserts.indexOf(item)
                    this.editedItem = Object.assign({}, item)
                    this.dialogDelete = true
                },

                deleteItemConfirm() {
                    this.desserts.splice(this.editedIndex, 1)
                    this.closeDelete()
                },

                close() {
                    this.dialog = false
                    this.$nextTick(() => {
                        this.editedItem = Object.assign({}, this.defaultItem)
                        this.editedIndex = -1
                    })
                },

                closeDelete() {
                    this.dialogDelete = false
                    this.$nextTick(() => {
                        this.editedItem = Object.assign({}, this.defaultItem)
                        this.editedIndex = -1
                    })
                },

                  save () {
                if (this.editedIndex > -1) {
                    Object.assign(this.desserts[this.editedIndex], this.editedItem)
                } else {
                    this.desserts.push(this.editedItem)
                }
                this.close()
                },
            },
            // Computed Manager
            computed: {

            },
            // Watch
            watch: {

            },
            mounted() {
                console.log('mounted');
                // 綁定
             
            }
        }).use(vuetify).mount('#app');


    </script>*@
}